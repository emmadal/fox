// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilePicker Component renders correctly when visible 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  onRequestClose={[MockFunction]}
  testID="file-picker-modal"
  transparent={true}
  visible={true}
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    className="flex-1 justify-center items-center bg-transparent"
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="file-picker-backdrop"
  >
    <View
      className="dark:bg-gray-800 bg-gray-100 dark:text-white absolute bottom-1/2 self-center py-6 gap-8 pl-5 w-[90%] rounded-lg"
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="camera-button"
      >
        <View />
        <Text
          className="text-black dark:text-white font-medium text-lg"
        >
          takephoto
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="photo-button"
      >
        <View />
        <Text
          className="text-black dark:text-white font-medium text-lg"
        >
          choosephoto
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
